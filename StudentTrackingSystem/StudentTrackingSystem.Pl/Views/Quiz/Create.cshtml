@model StudentTrackingSystem.Pl.DTOs.CreateQuizDTO

@{
    ViewData["Title"] = "Create Quiz";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="page-title mb-0">Create New Quiz</h1>
            <p class="text-muted">Fill in the quiz details and add questions</p>
        </div>
    </div>

    <form asp-action="Create" method="post" class="needs-validation" novalidate>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="card shadow mb-4">
            <div class="card-header bg-navy text-white">
                <h5 class="mb-0">Quiz Details</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="Name" class="form-label">Quiz Name</label>
                            <input asp-for="Name" class="form-control" required />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="TotalMarks" class="form-label">Total Marks</label>
                            <input asp-for="TotalMarks" class="form-control" type="number" min="1" max="100" required />
                            <span asp-validation-for="TotalMarks" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="GradeId" class="form-label">Grade</label>
                            <select asp-for="GradeId" class="form-select" asp-items="ViewBag.Grades" required>
                                <option value="">-- Select Grade --</option>
                            </select>
                            <span asp-validation-for="GradeId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="SubjectId" class="form-label">Subject</label>
                            <select asp-for="SubjectId" class="form-select" asp-items="ViewBag.Subjects" required>
                                <option value="">-- Select Subject --</option>
                            </select>
                            <span asp-validation-for="SubjectId" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="StartTime" class="form-label">Start Time</label>
                            <input asp-for="StartTime" class="form-control" type="datetime-local" required />
                            <span asp-validation-for="StartTime" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            <label asp-for="EndTime" class="form-label">End Time</label>
                            <input asp-for="EndTime" class="form-control" type="datetime-local" required />
                            <span asp-validation-for="EndTime" class="text-danger"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card shadow mb-4">
            <div class="card-header bg-navy text-white d-flex justify-content-between align-items-center">
                <h5 class="mb-0">Questions</h5>
                <button type="button" class="btn btn-light" onclick="addQuestion()">
                    <i class="fas fa-plus"></i> Add Question
                </button>
            </div>
            <div class="card-body">
                <div id="questions-container">
                    <!-- Questions will be added here dynamically -->
                </div>
            </div>
        </div>

        <div class="text-center mt-4">
            <button type="submit" class="btn btn-primary btn-lg me-2">
                <i class="fas fa-save"></i> Save Quiz
            </button>
            <a asp-action="Index" class="btn btn-secondary btn-lg">
                <i class="fas fa-times"></i> Cancel
            </a>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        let questionCount = 0;

        function addQuestion() {
            const container = document.getElementById('questions-container');
            const questionDiv = document.createElement('div');
            questionDiv.className = 'card mb-3 question-card';
            questionDiv.id = `question-${questionCount}`;

            questionDiv.innerHTML = `
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h6 class="mb-0">Question ${questionCount + 1}</h6>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeQuestion(${questionCount})">
                            <i class="fas fa-trash"></i> Remove
                        </button>
                    </div>
                    <div class="row mb-3">
                        <div class="col-12">
                            <div class="form-group">
                                <label class="form-label">Question Text</label>
                                <input type="text" name="Questions[${questionCount}].QuestionText" class="form-control" required />
                            </div>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label class="form-label">Question Type</label>
                                <select name="Questions[${questionCount}].QuestionType" class="form-select" onchange="toggleQuestionType(${questionCount})" required>
                                    <option value="0">Multiple Choice</option>
                                    <option value="1">Essay</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div id="options-${questionCount}" class="options-section">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">Option 1</label>
                                    <input type="text" name="Questions[${questionCount}].Option1" class="form-control" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">Option 2</label>
                                    <input type="text" name="Questions[${questionCount}].Option2" class="form-control" required />
                                </div>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">Option 3</label>
                                    <input type="text" name="Questions[${questionCount}].Option3" class="form-control" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">Option 4</label>
                                    <input type="text" name="Questions[${questionCount}].Option4" class="form-control" required />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">Correct Answer</label>
                                    <select name="Questions[${questionCount}].CorrectOption" class="form-select" required>
                                        <option value="">-- Select Correct Answer --</option>
                                        <option value="1">Option 1</option>
                                        <option value="2">Option 2</option>
                                        <option value="3">Option 3</option>
                                        <option value="4">Option 4</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `;

            container.appendChild(questionDiv);
            questionCount++;
        }

        function removeQuestion(index) {
            const questionDiv = document.getElementById(`question-${index}`);
            questionDiv.remove();
        }

        function toggleQuestionType(index) {
            const select = document.querySelector(`select[name="Questions[${index}].QuestionType"]`);
            const optionsDiv = document.getElementById(`options-${index}`);
            
            if (select.value === "1") { // Essay
                optionsDiv.style.display = 'none';
                optionsDiv.querySelectorAll('input, select').forEach(input => {
                    input.required = false;
                });
            } else { // Multiple Choice
                optionsDiv.style.display = 'block';
                optionsDiv.querySelectorAll('input, select').forEach(input => {
                    input.required = true;
                });
            }
        }

        // Form validation
        document.querySelector('form').addEventListener('submit', function(e) {
            if (!this.checkValidity()) {
                e.preventDefault();
                e.stopPropagation();
            }
            this.classList.add('was-validated');
        });

        // Initialize datetime-local inputs with current date/time
        window.addEventListener('load', function() {
            const now = new Date();
            now.setMinutes(now.getMinutes() - now.getTimezoneOffset());
            
            const startTime = document.querySelector('input[name="StartTime"]');
            startTime.min = now.toISOString().slice(0, 16);
            if (!startTime.value) {
                startTime.value = now.toISOString().slice(0, 16);
            }
            
            const endTime = document.querySelector('input[name="EndTime"]');
            now.setHours(now.getHours() + 1);
            endTime.min = now.toISOString().slice(0, 16);
            if (!endTime.value) {
                endTime.value = now.toISOString().slice(0, 16);
            }
        });
    </script>

    <style>
        :root {
            --navy-color: #1a237e;
            --navy-light: #534bae;
        }

        .card {
            transition: all 0.3s ease;
        }
        .question-card {
            border-left: 4px solid var(--navy-color);
        }
        .question-card:hover {
            transform: translateX(5px);
        }
        .form-control:focus, .form-select:focus {
            border-color: var(--navy-color);
            box-shadow: 0 0 0 0.2rem rgba(26, 35, 126, 0.25);
        }
        .btn-light {
            background-color: rgba(255, 255, 255, 0.9);
        }
        .btn-light:hover {
            background-color: #fff;
            transform: translateY(-2px);
        }
        .options-section {
            background-color: #f8f9fa;
            padding: 1rem;
            border-radius: 0.5rem;
            margin-top: 1rem;
        }
        .bg-navy {
            background-color: var(--navy-color) !important;
        }
        .btn-primary {
            background-color: var(--navy-color);
            border-color: var(--navy-color);
        }
        .btn-primary:hover {
            background-color: var(--navy-light);
            border-color: var(--navy-light);
        }
    </style>
} 